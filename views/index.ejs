<html lang="en">
<%- include("./partials/head.ejs") %>

<body>
  <%- include("./partials/nav.ejs") %>

  <div class="runs content">
    <div style="display: flex; justify-content: space-between;">
      <h2> Runs </h2>
      <div class="filter-container">
        <button class="filter-button" onclick="toggleDropdown()">Filter</button>
        <div class="filter-dropdown" id="myDropdown">
            <a href="#" onclick="showInput('distance')">Distance</a>
            <div class="filter-input-container" id="distanceInputContainer" style="display: none; margin-right: 4px;">
                <input type="number" id="distance" placeholder="Enter min. distance">
            </div>

            <a href="#" onclick="showInput('date')">Date</a>
            <div class="filter-input-container" id="dateInputContainer" style="display: none; margin-right: 4px;">
                <input type="date" id="date">
            </div>

            <a href="#" onclick="showInput('duration')">Duration</a>
            <div class="filter-input-container" id="durationInputContainer" style="display: none; margin-right: 4px;">
                <input type="text" id="duration" placeholder="Enter min. duration">
            </div>

            <a href="#" onclick="showInput('pace')">Pace</a>
            <div class="filter-input-container" id="paceInputContainer" style="display: none; margin-right: 4px;">
                <input type="text" id="pace" placeholder="Enter max. pace">
            </div>

            <button onclick="applyFilter()">Apply</button>
        </div>
      </div>
    </div>

  
  <script>
  function toggleDropdown() {
      var dropdown = document.getElementById("myDropdown");
      dropdown.style.display = dropdown.style.display === 'block' ? 'none' : 'block';
      dropdown.style.borderRadius = '4px';

      // clear inputs
      var inputs = document.querySelectorAll('.filter-dropdown input');
      inputs.forEach(input => {
          input.value = ''; 
      });
  }

  
  function showInput(option) {
    var selectedInputContainer = document.getElementById(`${option}InputContainer`);
    if (selectedInputContainer.style.display === 'block') {
        // If the selected input container is already visible, hide it
        selectedInputContainer.style.display = 'none';
        var inputContainer = document.getElementById(`${option}InputContainer`);
        var inputField = inputContainer.querySelector('input');
        inputField.value = ''; 
    } else {
        selectedInputContainer.style.display = 'block';
    }
}

function applyFilter() {
    var inputs = document.querySelectorAll('.filter-dropdown input');
    var filters = [];
    var url = "/runs?";

    inputs.forEach(input => {
        if (input.value.trim() !== "") {
            // Apply different regex patterns based on the option
            var regexPattern = '';
            if (input.id === 'duration' || input.id === 'pace') {
                regexPattern = '^(?:[0-2]?[0-9]?[0-9]:)?([0-5]?\\d)(?::([0-5]?\\d)(?::([0-5][0-9]))?)?$';
            } else {
                regexPattern = '^.*$'; // Default pattern, accept any value
            }

            // Create a regular expression object
            var regex = new RegExp(regexPattern);

            // Test if the input value matches the regex pattern
            if (!regex.test(input.value)) {
                // Display error message or handle invalid input
                console.error('Invalid input for ' + input.id);
                return; // Skip further processing for this input
            }
            filters.push({
                option: input.id,
                value: input.value
            });
            if (url == '/runs?') {
              url += input.id + "=" + input.value;
            } else {
              url += "&" + input.id + "=" + input.value;
            }
        }
    });

    console.log(url);

    if (filters.length > 0) {
        fetch('/apply-filter', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ filters: filters })
        })
        .then(response => {
            if (response.ok) {
                // If the response is successful, parse the JSON response
                window.location.href = url;
            } else {
                throw new Error('Error applying filters:', response.statusText);
            }
        })
        .catch(error => {
            console.error('Error:', error);
        });
        toggleDropdown();
    }
}




  
  function getFormat(option) {
      switch(option) {
          case 'distance':
              return "ex. 5 miles";
          case 'date':
              return "ex. YYYY-MM-DD";
          case 'duration':
              return "ex., HH:MM:SS";
          case 'pace':
              return "ex., mm:ss per mile";
          default:
              return "";
      }
  }

  function formatDuration(durationInput) {
      const durationValue = durationInput;

      // Split the duration string by ':'
      const parts = durationValue.split(':');

      if (parts.length === 2) {
          // Duration does not include hours, add '0:' to the beginning
          return `0:${durationValue}`;
      } else if (parts.length === 3) {
          // Duration already includes hours
          return durationValue;
      } else {
          // Invalid duration format
          console.error('Invalid duration format');
      }
  }
  
  // Close the dropdown menu if the user clicks outside of it
  document.body.addEventListener('click', function(event) {
      var dropdown = document.getElementById("myDropdown");
      var inputContainer = document.getElementById("filterInputContainer");
      if (!dropdown.contains(event.target) && event.target !== document.querySelector('.filter-button')) {
          var dropdownOptions = document.querySelectorAll('.filter-dropdown a');
          dropdownOptions.forEach(function(optionElement) {
              optionElement.classList.remove('hidden'); // Unhide all options
          });
          dropdown.style.display = 'none';
          inputContainer.style.display = 'none';
      }
      
  });

  </script>

    <% if (runs.length > 0) { %>
      <% runs.forEach(run => { %>
        <a class="single" href="/runs/<%= run._id %>" style="margin-bottom: 20px;">
          <h3 class="name"><%= run.name %></h3>
          <p class="date">Date: <%= run.date.toLocaleDateString('en-US', {timeZone: 'UTC'}, {
            year: 'numeric',
            month: 'short',
            day: '2-digit'
          })%></p>
          <p class="distance">Distance: <%= run.distance %></p>
          <p class="pace">Pace: <%= Math.floor(run.pace / 60) %>:<%= run.pace % 60 < 10 ? '0' + Math.round(run.pace % 60) : Math.round(run.pace % 60) %> min/mi</p>
        </a>
      <% }) %>

    <% } else { %>
      <p>There are no runs to display...</p>
    <% } %>
    
  </div>

</body>
</html>
